<problem title="Problem using custom Javascript" display_name="Problems using custom Javascript" rerandomize="never" showanswer="attempted" type="lecture">
  <style type="text/css">
tt {color:blue;}
</style>
  <text><h2>Example problem with custom Javascript</h2><p>
This problem demonstrates how a custom Javascript can be used instead for response input, instead of one of the edX input response types.  
</p><p>The Javascript is stored in a separate file (in this case, <tt><a href="/static/html/x_custom_javascript.html">x_custom_javascript.html</a></tt>)
and embedded in the problem using an <tt>&lt;iframe&gt;</tt>.  Google's <a href="https://google-developers.appspot.com/chart/interactive/docs/gallery/linechart">chart
tools</a> (specifically, from <a href="http://code.google.com/apis/ajax/playground/?type=visualization#interaction_using_events">this
example</a>) are used to create the chart from data in the script.</p><script type="text/python">
data = [['Name',  'Manager'],
    ['Mike', '' ],
    ['Jim',   'Mike'],
    ['Alex', 'Mike'],
    ['Bob',   'Jim'],
    ['Carol', 'Bob'],
]
datastr = repr(data)
the_ans = 'Carol'

def test_ans(expect,ans):
    return the_ans==ans

</script>

The script used is:
<blockquote><pre>
&lt;script type="loncapa/python"&gt;&lt;![CDATA[
data = [['Name',  'Manager'],
    ['Mike', '' ],
    ['Jim',   'Mike'],
    ['Alex', 'Mike'],
    ['Bob',   'Jim'],
    ['Carol', 'Bob'],
]
datastr = repr(data)
the_ans = 'Carol'

def test_ans(expect,ans):
    return the_ans==ans
]]&gt;
&lt;/script&gt;
</pre></blockquote>

<br/>
<p>The chart is generated by this code:</p>
<pre>
    &lt;div id="graphX" title="$​title" data="$​data" /&gt;
    &lt;iframe src="/static/html/x_custom_javascript.html" width="720" height="230" scrolling="no" /&gt;
</pre>
<br/>

<p>And the question is generated by this code:</p>
<pre>
  &lt;customresponse cfn="test_ans"&gt;
        &lt;textline hidden="jsinput" size="40" correct_answer="$the_ans"/&gt;&lt;br/&gt;
  &lt;/customresponse&gt;
</pre>
<br/>
<p>Note the <tt>hidden="jsinput"</tt> attribute; this specifies that the text input line should be hidden (not displayed), and that the ID of the text input line should be stored as the value of the "inputid" attribute in a <tt>&lt;div name="jsinput" inputid="..."&gt; </tt>.  The Javascript code puts the answer in the <tt>value</tt> of the document element with that ID.</p>

<br/>

<div id="graphX" title="$title" data="$datastr"/>
<iframe src="/static/html/x_custom_javascript.html" width="720" height="230" scrolling="no"/>

<p>
Consider the organizational chart presented above.
Select the person who reports to Bob</p>
<customresponse cfn="test_ans"><textline hidden="jsinput" size="40" correct_answer="$the_ans"/><br/></customresponse>

</text>
</problem>
